(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{569:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"refcell-t-和内部可变性模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refcell-t-和内部可变性模式"}},[s._v("#")]),s._v(" "),a("code",[s._v("RefCell<T>")]),s._v(" 和内部可变性模式")]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch15-05-interior-mutability.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("ch15-05-interior-mutability.md"),a("OutboundLink")],1),s._v(" > "),a("br"),s._v("\ncommit 26565efc3f62d9dacb7c2c6d0f5974360e459493")])]),s._v(" "),a("p",[a("strong",[s._v("内部可变性")]),s._v("（"),a("em",[s._v("Interior mutability")]),s._v("）是 Rust 中的一个设计模式，它允许你即使在有不可变引用时也可以改变数据，这通常是借用规则所不允许的。为了改变数据，该模式在数据结构中使用 "),a("code",[s._v("unsafe")]),s._v(" 代码来模糊 Rust 通常的可变性和借用规则。我们还未讲到不安全代码；第十九章会学习它们。当可以确保代码在运行时会遵守借用规则，即使编译器不能保证的情况，可以选择使用那些运用内部可变性模式的类型。所涉及的 "),a("code",[s._v("unsafe")]),s._v(" 代码将被封装进安全的 API 中，而外部类型仍然是不可变的。")]),s._v(" "),a("p",[s._v("让我们通过遵循内部可变性模式的 "),a("code",[s._v("RefCell<T>")]),s._v(" 类型来开始探索。")]),s._v(" "),a("h3",{attrs:{id:"通过-refcell-t-在运行时检查借用规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-refcell-t-在运行时检查借用规则"}},[s._v("#")]),s._v(" 通过 "),a("code",[s._v("RefCell<T>")]),s._v(" 在运行时检查借用规则")]),s._v(" "),a("p",[s._v("不同于 "),a("code",[s._v("Rc<T>")]),s._v("，"),a("code",[s._v("RefCell<T>")]),s._v(" 代表其数据的唯一的所有权。那么是什么让 "),a("code",[s._v("RefCell<T>")]),s._v(" 不同于像 "),a("code",[s._v("Box<T>")]),s._v(" 这样的类型呢？回忆一下第四章所学的借用规则：")]),s._v(" "),a("ol",[a("li",[s._v("在任意给定时刻，只能拥有一个可变引用或任意数量的不可变引用 "),a("strong",[s._v("之一")]),s._v("（而不是两者）。")]),s._v(" "),a("li",[s._v("引用必须总是有效的。")])]),s._v(" "),a("p",[s._v("对于引用和 "),a("code",[s._v("Box<T>")]),s._v("，借用规则的不可变性作用于编译时。对于 "),a("code",[s._v("RefCell<T>")]),s._v("，这些不可变性作用于 "),a("strong",[s._v("运行时")]),s._v("。对于引用，如果违反这些规则，会得到一个编译错误。而对于 "),a("code",[s._v("RefCell<T>")]),s._v("，如果违反这些规则程序会 panic 并退出。")]),s._v(" "),a("p",[s._v("在编译时检查借用规则的优势是这些错误将在开发过程的早期被捕获，同时对运行时没有性能影响，因为所有的分析都提前完成了。为此，在编译时检查借用规则是大部分情况的最佳选择，这也正是其为何是 Rust 的默认行为。")]),s._v(" "),a("p",[s._v("相反在运行时检查借用规则的好处则是允许出现特定内存安全的场景，而它们在编译时检查中是不允许的。静态分析，正如 Rust 编译器，是天生保守的。但代码的一些属性不可能通过分析代码发现：其中最著名的就是 "),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"}},[s._v("停机问题（Halting Problem）"),a("OutboundLink")],1),s._v("，这超出了本书的范畴，不过如果你感兴趣的话这是一个值得研究的有趣主题。")]),s._v(" "),a("p",[s._v("因为一些分析是不可能的，如果 Rust 编译器不能通过所有权规则编译，它可能会拒绝一个正确的程序；从这种角度考虑它是保守的。如果 Rust 接受不正确的程序，那么用户也就不会相信 Rust 所做的保证了。然而，如果 Rust 拒绝正确的程序，虽然会给程序员带来不便，但不会带来灾难。"),a("code",[s._v("RefCell<T>")]),s._v(" 正是用于当你确信代码遵守借用规则，而编译器不能理解和确定的时候。")]),s._v(" "),a("p",[s._v("类似于 "),a("code",[s._v("Rc<T>")]),s._v("，"),a("code",[s._v("RefCell<T>")]),s._v(" 只能用于单线程场景。如果尝试在多线程上下文中使用"),a("code",[s._v("RefCell<T>")]),s._v("，会得到一个编译错误。第十六章会介绍如何在多线程程序中使用 "),a("code",[s._v("RefCell<T>")]),s._v(" 的功能。")]),s._v(" "),a("p",[s._v("如下为选择 "),a("code",[s._v("Box<T>")]),s._v("，"),a("code",[s._v("Rc<T>")]),s._v(" 或 "),a("code",[s._v("RefCell<T>")]),s._v(" 的理由：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Rc<T>")]),s._v(" 允许相同数据有多个所有者；"),a("code",[s._v("Box<T>")]),s._v(" 和 "),a("code",[s._v("RefCell<T>")]),s._v(" 有单一所有者。")]),s._v(" "),a("li",[a("code",[s._v("Box<T>")]),s._v(" 允许在编译时执行不可变或可变借用检查；"),a("code",[s._v("Rc<T>")]),s._v("仅允许在编译时执行不可变借用检查；"),a("code",[s._v("RefCell<T>")]),s._v(" 允许在运行时执行不可变或可变借用检查。")]),s._v(" "),a("li",[s._v("因为 "),a("code",[s._v("RefCell<T>")]),s._v(" 允许在运行时执行可变借用检查，所以我们可以在即便 "),a("code",[s._v("RefCell<T>")]),s._v(" 自身是不可变的情况下修改其内部的值。")])]),s._v(" "),a("p",[s._v("在不可变值内部改变值就是 "),a("strong",[s._v("内部可变性")]),s._v(" 模式。让我们看看何时内部可变性是有用的，并讨论这是如何成为可能的。")]),s._v(" "),a("h3",{attrs:{id:"内部可变性：不可变值的可变借用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部可变性：不可变值的可变借用"}},[s._v("#")]),s._v(" 内部可变性：不可变值的可变借用")]),s._v(" "),a("p",[s._v("借用规则的一个推论是当有一个不可变值时，不能可变地借用它。例如，如下代码不能编译：")]),s._v(" "),a("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("fn main() {\n    let x = 5;\n    let y = &mut x;\n}\n")])])]),a("p",[s._v("如果尝试编译，会得到如下错误：")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("error[E0596]: cannot borrow immutable local variable `x` as mutable\n --\x3e src/main.rs:3:18\n  |\n2 |     let x = 5;\n  |         - consider changing this to `mut x`\n3 |     let y = &mut x;\n  |                  ^ cannot borrow mutably\n")])])]),a("p",[s._v("然而，特定情况下，令一个值在其方法内部能够修改自身，而在其他代码中仍视为不可变，是很有用的。值方法外部的代码就不能修改其值了。"),a("code",[s._v("RefCell<T>")]),s._v(" 是一个获得内部可变性的方法。"),a("code",[s._v("RefCell<T>")]),s._v(" 并没有完全绕开借用规则，编译器中的借用检查器允许内部可变性并相应地在运行时检查借用规则。如果违反了这些规则，会出现 panic 而不是编译错误。")]),s._v(" "),a("p",[s._v("让我们通过一个实际的例子来探索何处可以使用 "),a("code",[s._v("RefCell<T>")]),s._v(" 来修改不可变值并看看为何这么做是有意义的。")]),s._v(" "),a("h4",{attrs:{id:"内部可变性的用例：mock-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部可变性的用例：mock-对象"}},[s._v("#")]),s._v(" 内部可变性的用例：mock 对象")]),s._v(" "),a("p",[a("strong",[s._v("测试替身")]),s._v("（"),a("em",[s._v("test double")]),s._v("）是一个通用编程概念，它代表一个在测试中替代某个类型的类型。"),a("strong",[s._v("mock 对象")]),s._v(" 是特定类型的测试替身，它们记录测试过程中发生了什么以便可以断言操作是正确的。")]),s._v(" "),a("p",[s._v("虽然 Rust 中的对象与其他语言中的对象并不是一回事，Rust 也没有像其他语言那样在标准库中内建 mock 对象功能，不过我们确实可以创建一个与 mock 对象有着相同功能的结构体。")]),s._v(" "),a("p",[s._v("如下是一个我们想要测试的场景：我们在编写一个记录某个值与最大值的差距的库，并根据当前值与最大值的差距来发送消息。例如，这个库可以用于记录用户所允许的 API 调用数量限额。")]),s._v(" "),a("p",[s._v("该库只提供记录与最大值的差距，以及何种情况发送什么消息的功能。使用此库的程序则期望提供实际发送消息的机制：程序可以选择记录一条消息、发送 email、发送短信等等。库本身无需知道这些细节；只需实现其提供的 "),a("code",[s._v("Messenger")]),s._v(" trait 即可。示例 15-20 展示了库代码：")]),s._v(" "),a("p",[a("span",{staticClass:"filename"},[s._v("文件名: src/lib.rs")])]),s._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trait")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("impl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("set_value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("f64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("max "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("f64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error: You are over your quota!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Urgent warning: You\'ve used up over 90% of your quota!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.75")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Warning: You\'ve used up over 75% of your quota!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("span",{staticClass:"caption"},[s._v("示例 15-20：一个记录某个值与最大值差距的库，并根据此值的特定级别发出警告")])]),s._v(" "),a("p",[s._v("这些代码中一个重要部分是拥有一个方法 "),a("code",[s._v("send")]),s._v(" 的 "),a("code",[s._v("Messenger")]),s._v(" trait，其获取一个 "),a("code",[s._v("self")]),s._v(" 的不可变引用和文本信息。这是我们的 mock 对象所需要拥有的接口。另一个重要的部分是我们需要测试 "),a("code",[s._v("LimitTracker")]),s._v(" 的 "),a("code",[s._v("set_value")]),s._v(" 方法的行为。可以改变传递的 "),a("code",[s._v("value")]),s._v(" 参数的值，不过 "),a("code",[s._v("set_value")]),s._v(" 并没有返回任何可供断言的值。也就是说，如果使用某个实现了 "),a("code",[s._v("Messenger")]),s._v(" trait 的值和特定的 "),a("code",[s._v("max")]),s._v(" 创建 "),a("code",[s._v("LimitTracker")]),s._v("，当传递不同 "),a("code",[s._v("value")]),s._v(" 值时，消息发送者应被告知发送合适的消息。")]),s._v(" "),a("p",[s._v("我们所需的 mock 对象是，调用 "),a("code",[s._v("send")]),s._v(" 并不实际发送 email 或消息，而是只记录信息被通知要发送了。可以新建一个 mock 对象示例，用其创建 "),a("code",[s._v("LimitTracker")]),s._v("，调用 "),a("code",[s._v("LimitTracker")]),s._v(" 的 "),a("code",[s._v("set_value")]),s._v(" 方法，然后检查 mock 对象是否有我们期望的消息。示例 15-21 展示了一个如此尝试的 mock 对象实现，不过借用检查器并不允许：")]),s._v(" "),a("p",[a("span",{staticClass:"filename"},[s._v("文件名: src/lib.rs")])]),s._v(" "),a("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#[cfg(test)]\nmod tests {\n    use super::*;\n\n    struct MockMessenger {\n        sent_messages: Vec<String>,\n    }\n\n    impl MockMessenger {\n        fn new() -> MockMessenger {\n            MockMessenger { sent_messages: vec![] }\n        }\n    }\n\n    impl Messenger for MockMessenger {\n        fn send(&self, message: &str) {\n            self.sent_messages.push(String::from(message));\n        }\n    }\n\n    #[test]\n    fn it_sends_an_over_75_percent_warning_message() {\n        let mock_messenger = MockMessenger::new();\n        let mut limit_tracker = LimitTracker::new(&mock_messenger, 100);\n\n        limit_tracker.set_value(80);\n\n        assert_eq!(mock_messenger.sent_messages.len(), 1);\n    }\n}\n")])])]),a("p",[a("span",{staticClass:"caption"},[s._v("示例 15-21：尝试实现 "),a("code",[s._v("MockMessenger")]),s._v("，借用检查器不允许这么做")])]),s._v(" "),a("p",[s._v("测试代码定义了一个 "),a("code",[s._v("MockMessenger")]),s._v(" 结构体，其 "),a("code",[s._v("sent_messages")]),s._v(" 字段为一个 "),a("code",[s._v("String")]),s._v(" 值的 "),a("code",[s._v("Vec")]),s._v(" 用来记录被告知发送的消息。我们还定义了一个关联函数 "),a("code",[s._v("new")]),s._v(" 以便于新建从空消息列表开始的 "),a("code",[s._v("MockMessenger")]),s._v(" 值。接着为 "),a("code",[s._v("MockMessenger")]),s._v(" 实现 "),a("code",[s._v("Messenger")]),s._v(" trait 这样就可以为 "),a("code",[s._v("LimitTracker")]),s._v(" 提供一个 "),a("code",[s._v("MockMessenger")]),s._v("。在 "),a("code",[s._v("send")]),s._v(" 方法的定义中，获取传入的消息作为参数并储存在 "),a("code",[s._v("MockMessenger")]),s._v(" 的 "),a("code",[s._v("sent_messages")]),s._v(" 列表中。")]),s._v(" "),a("p",[s._v("在测试中，我们测试了当 "),a("code",[s._v("LimitTracker")]),s._v(" 被告知将 "),a("code",[s._v("value")]),s._v(" 设置为超过 "),a("code",[s._v("max")]),s._v(" 值 75% 的某个值。首先新建一个 "),a("code",[s._v("MockMessenger")]),s._v("，其从空消息列表开始。接着新建一个 "),a("code",[s._v("LimitTracker")]),s._v(" 并传递新建 "),a("code",[s._v("MockMessenger")]),s._v(" 的引用和 "),a("code",[s._v("max")]),s._v(" 值 100。我们使用值 80 调用 "),a("code",[s._v("LimitTracker")]),s._v(" 的 "),a("code",[s._v("set_value")]),s._v(" 方法，这超过了 100 的 75%。接着断言 "),a("code",[s._v("MockMessenger")]),s._v(" 中记录的消息列表应该有一条消息。")]),s._v(" "),a("p",[s._v("然而，这个测试是有问题的：")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("error[E0596]: cannot borrow immutable field `self.sent_messages` as mutable\n  --\x3e src/lib.rs:52:13\n   |\n51 |         fn send(&self, message: &str) {\n   |                 ----- use `&mut self` here to make mutable\n52 |             self.sent_messages.push(String::from(message));\n   |             ^^^^^^^^^^^^^^^^^^ cannot mutably borrow immutable field\n")])])]),a("p",[s._v("不能修改 "),a("code",[s._v("MockMessenger")]),s._v(" 来记录消息，因为 "),a("code",[s._v("send")]),s._v(" 方法获取了 "),a("code",[s._v("self")]),s._v(" 的不可变引用。我们也不能参考错误文本的建议使用 "),a("code",[s._v("&mut self")]),s._v(" 替代，因为这样 "),a("code",[s._v("send")]),s._v(" 的签名就不符合 "),a("code",[s._v("Messenger")]),s._v(" trait 定义中的签名了（可以试着这么改，看看会出现什么错误信息）。")]),s._v(" "),a("p",[s._v("这正是内部可变性的用武之地！我们将通过 "),a("code",[s._v("RefCell")]),s._v(" 来储存 "),a("code",[s._v("sent_messages")]),s._v("，然后 "),a("code",[s._v("send")]),s._v(" 将能够修改 "),a("code",[s._v("sent_messages")]),s._v(" 并储存消息。示例 15-22 展示了代码：")]),s._v(" "),a("p",[a("span",{staticClass:"filename"},[s._v("文件名: src/lib.rs")])]),s._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[s._v("# "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trait")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n# "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n#\n# "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#     messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n#     value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n#     max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n# "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n#\n# "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("impl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n#     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#             messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n#             value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n#             max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n#     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n#\n#     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("set_value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("usize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#\n#         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("f64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("max "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("f64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#\n#         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error: You are over your quota!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Urgent warning: You\'ve used up over 90% of your quota!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" percentage_of_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.75")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Warning: You\'ve used up over 75% of your quota!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n#     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n# "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n#\n"),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[s._v("#[cfg(test)]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mod")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token module-declaration namespace"}},[s._v("tests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),s._v("cell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[s._v("MockMessenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        sent_messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vec")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("impl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MockMessenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MockMessenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MockMessenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" sent_messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("vec!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("impl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Messenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MockMessenger")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sent_messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("borrow_mut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[s._v("#[test]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("it_sends_an_over_75_percent_warning_message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --snip--")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" mock_messenger "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MockMessenger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" limit_tracker "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LimitTracker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("mock_messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#         limit_tracker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set_value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("75")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("assert_eq!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mock_messenger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sent_messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("borrow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n# "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("span",{staticClass:"caption"},[s._v("示例 15-22：使用 "),a("code",[s._v("RefCell<T>")]),s._v(" 能够在外部值被认为是不可变的情况下修改内部值")])]),s._v(" "),a("p",[s._v("现在 "),a("code",[s._v("sent_messages")]),s._v(" 字段的类型是 "),a("code",[s._v("RefCell<Vec<String>>")]),s._v(" 而不是 "),a("code",[s._v("Vec<String>")]),s._v("。在 "),a("code",[s._v("new")]),s._v(" 函数中新建了一个 "),a("code",[s._v("RefCell")]),s._v(" 示例替代空 vector。")]),s._v(" "),a("p",[s._v("对于 "),a("code",[s._v("send")]),s._v(" 方法的实现，第一个参数仍为 "),a("code",[s._v("self")]),s._v(" 的不可变借用，这是符合方法定义的。我们调用 "),a("code",[s._v("self.sent_messages")]),s._v(" 中 "),a("code",[s._v("RefCell")]),s._v(" 的 "),a("code",[s._v("borrow_mut")]),s._v(" 方法来获取 "),a("code",[s._v("RefCell")]),s._v(" 中值的可变引用，这是一个 vector。接着可以对 vector 的可变引用调用 "),a("code",[s._v("push")]),s._v(" 以便记录测试过程中看到的消息。")]),s._v(" "),a("p",[s._v("最后必须做出的修改位于断言中：为了看到其内部 vector 中有多少个项，需要调用 "),a("code",[s._v("RefCell")]),s._v(" 的 "),a("code",[s._v("borrow")]),s._v(" 以获取 vector 的不可变引用。")]),s._v(" "),a("p",[s._v("现在我们见识了如何使用 "),a("code",[s._v("RefCell<T>")]),s._v("，让我们研究一下它怎样工作的！")]),s._v(" "),a("h3",{attrs:{id:"refcell-t-在运行时记录借用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refcell-t-在运行时记录借用"}},[s._v("#")]),s._v(" "),a("code",[s._v("RefCell<T>")]),s._v(" 在运行时记录借用")]),s._v(" "),a("p",[s._v("当创建不可变和可变引用时，我们分别使用 "),a("code",[s._v("&")]),s._v(" 和 "),a("code",[s._v("&mut")]),s._v(" 语法。对于 "),a("code",[s._v("RefCell<T>")]),s._v(" 来说，则是 "),a("code",[s._v("borrow")]),s._v(" 和 "),a("code",[s._v("borrow_mut")]),s._v(" 方法，这属于 "),a("code",[s._v("RefCell<T>")]),s._v(" 安全 API 的一部分。"),a("code",[s._v("borrow")]),s._v(" 方法返回 "),a("code",[s._v("Ref<T>")]),s._v(" 类型的智能指针，"),a("code",[s._v("borrow_mut")]),s._v(" 方法返回 "),a("code",[s._v("RefMut")]),s._v(" 类型的智能指针。这两个类型都实现了 "),a("code",[s._v("Deref")]),s._v("，所以可以当作常规引用对待。")]),s._v(" "),a("p",[a("code",[s._v("RefCell<T>")]),s._v(" 记录当前有多少个活动的 "),a("code",[s._v("Ref<T>")]),s._v(" 和 "),a("code",[s._v("RefMut<T>")]),s._v(" 智能指针。每次调用 "),a("code",[s._v("borrow")]),s._v("，"),a("code",[s._v("RefCell<T>")]),s._v(" 将活动的不可变借用计数加一。当 "),a("code",[s._v("Ref<T>")]),s._v(" 值离开作用域时，不可变借用计数减一。就像编译时借用规则一样，"),a("code",[s._v("RefCell<T>")]),s._v(" 在任何时候只允许有多个不可变借用或一个可变借用。")]),s._v(" "),a("p",[s._v("如果我们尝试违反这些规则，相比引用时的编译时错误，"),a("code",[s._v("RefCell<T>")]),s._v(" 的实现会在运行时出现 panic。示例 15-23 展示了对示例 15-22 中 "),a("code",[s._v("send")]),s._v(" 实现的修改，这里我们故意尝试在相同作用域创建两个可变借用以便演示 "),a("code",[s._v("RefCell<T>")]),s._v(" 不允许我们在运行时这么做：")]),s._v(" "),a("p",[a("span",{staticClass:"filename"},[s._v("文件名: src/lib.rs")])]),s._v(" "),a("div",{staticClass:"language-rust,ignore,panics extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("impl Messenger for MockMessenger {\n    fn send(&self, message: &str) {\n        let mut one_borrow = self.sent_messages.borrow_mut();\n        let mut two_borrow = self.sent_messages.borrow_mut();\n\n        one_borrow.push(String::from(message));\n        two_borrow.push(String::from(message));\n    }\n}\n")])])]),a("p",[a("span",{staticClass:"caption"},[s._v("示例 15-23：在同一作用域中创建两个可变引用并观察 "),a("code",[s._v("RefCell<T>")]),s._v(" panic")])]),s._v(" "),a("p",[s._v("这里为 "),a("code",[s._v("borrow_mut")]),s._v(" 返回的 "),a("code",[s._v("RefMut")]),s._v(" 智能指针创建了 "),a("code",[s._v("one_borrow")]),s._v(" 变量。接着用相同的方式在变量 "),a("code",[s._v("two_borrow")]),s._v(" 创建了另一个可变借用。这会在相同作用域中创建两个可变引用，这是不允许的。当运行库的测试时，示例 15-23 编译时不会有任何错误，不过测试会失败：")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("---- tests::it_sends_an_over_75_percent_warning_message stdout ----\n\tthread 'tests::it_sends_an_over_75_percent_warning_message' panicked at\n'already borrowed: BorrowMutError', src/libcore/result.rs:906:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n")])])]),a("p",[s._v("注意代码 panic 和信息 "),a("code",[s._v("already borrowed: BorrowMutError")]),s._v("。这也就是 "),a("code",[s._v("RefCell<T>")]),s._v(" 如何在运行时处理违反借用规则的情况。")]),s._v(" "),a("p",[s._v("在运行时捕获借用错误而不是编译时意味着将会在开发过程的后期才会发现错误，甚至有可能发布到生产环境才发现；还会因为在运行时而不是编译时记录借用而导致少量的运行时性能惩罚。然而，使用 "),a("code",[s._v("RefCell")]),s._v(" 使得在只允许不可变值的上下文中编写修改自身以记录消息的 mock 对象成为可能。虽然有取舍，但是我们可以选择使用 "),a("code",[s._v("RefCell<T>")]),s._v(" 来获得比常规引用所能提供的更多的功能。")]),s._v(" "),a("h3",{attrs:{id:"结合-rc-t-和-refcell-t-来拥有多个可变数据所有者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结合-rc-t-和-refcell-t-来拥有多个可变数据所有者"}},[s._v("#")]),s._v(" 结合 "),a("code",[s._v("Rc<T>")]),s._v(" 和 "),a("code",[s._v("RefCell<T>")]),s._v(" 来拥有多个可变数据所有者")]),s._v(" "),a("p",[a("code",[s._v("RefCell<T>")]),s._v(" 的一个常见用法是与 "),a("code",[s._v("Rc<T>")]),s._v(" 结合。回忆一下 "),a("code",[s._v("Rc<T>")]),s._v(" 允许对相同数据有多个所有者，不过只能提供数据的不可变访问。如果有一个储存了 "),a("code",[s._v("RefCell<T>")]),s._v(" 的 "),a("code",[s._v("Rc<T>")]),s._v(" 的话，就可以得到有多个所有者 "),a("strong",[s._v("并且")]),s._v(" 可以修改的值了！")]),s._v(" "),a("p",[s._v("例如，回忆示例 15-18 的 cons list 的例子中使用 "),a("code",[s._v("Rc<T>")]),s._v(" 使得多个列表共享另一个列表的所有权。因为 "),a("code",[s._v("Rc<T>")]),s._v(" 只存放不可变值，所以一旦创建了这些列表值后就不能修改。让我们加入 "),a("code",[s._v("RefCell<T>")]),s._v(" 来获得修改列表中值的能力。示例 15-24 展示了通过在 "),a("code",[s._v("Cons")]),s._v(" 定义中使用 "),a("code",[s._v("RefCell<T>")]),s._v("，我们就允许修改所有列表中的值了：")]),s._v(" "),a("p",[a("span",{staticClass:"filename"},[s._v("文件名: src/main.rs")])]),s._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[s._v("#[derive(Debug)]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[s._v("List")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("i32")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("crate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),s._v("rc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),s._v("cell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("borrow_mut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a after = {:?}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b after = {:?}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c after = {:?}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("span",{staticClass:"caption"},[s._v("示例 15-24：使用 "),a("code",[s._v("Rc<RefCell<i32>>")]),s._v(" 创建可以修改的 "),a("code",[s._v("List")])])]),s._v(" "),a("p",[s._v("这里创建了一个 "),a("code",[s._v("Rc<RefCell<i32>>")]),s._v(" 实例并储存在变量 "),a("code",[s._v("value")]),s._v(" 中以便之后直接访问。接着在 "),a("code",[s._v("a")]),s._v(" 中用包含 "),a("code",[s._v("value")]),s._v(" 的 "),a("code",[s._v("Cons")]),s._v(" 成员创建了一个 "),a("code",[s._v("List")]),s._v("。需要克隆 "),a("code",[s._v("value")]),s._v(" 以便 "),a("code",[s._v("a")]),s._v(" 和 "),a("code",[s._v("value")]),s._v(" 都能拥有其内部值 "),a("code",[s._v("5")]),s._v(" 的所有权，而不是将所有权从 "),a("code",[s._v("value")]),s._v(" 移动到 "),a("code",[s._v("a")]),s._v(" 或者让 "),a("code",[s._v("a")]),s._v(" 借用 "),a("code",[s._v("value")]),s._v("。")]),s._v(" "),a("p",[s._v("我们将列表 "),a("code",[s._v("a")]),s._v(" 封装进了 "),a("code",[s._v("Rc<T>")]),s._v(" 这样当创建列表 "),a("code",[s._v("b")]),s._v(" 和 "),a("code",[s._v("c")]),s._v(" 时，他们都可以引用 "),a("code",[s._v("a")]),s._v("，正如示例 15-18 一样。")]),s._v(" "),a("p",[s._v("一旦创建了列表 "),a("code",[s._v("a")]),s._v("、"),a("code",[s._v("b")]),s._v(" 和 "),a("code",[s._v("c")]),s._v("，我们将 "),a("code",[s._v("value")]),s._v(" 的值加 10。为此对 "),a("code",[s._v("value")]),s._v(" 调用了 "),a("code",[s._v("borrow_mut")]),s._v("，这里使用了第五章讨论的自动解引用功能（"),a("RouterLink",{attrs:{to:"/ch05-03-method-syntax.html#wheres-the---operator"}},[s._v("“"),a("code",[s._v("->")]),s._v(" 运算符到哪去了？”")]),s._v(" 部分）来解引用 "),a("code",[s._v("Rc<T>")]),s._v(" 以获取其内部的 "),a("code",[s._v("RefCell<T>")]),s._v(" 值。"),a("code",[s._v("borrow_mut")]),s._v(" 方法返回 "),a("code",[s._v("RefMut<T>")]),s._v(" 智能指针，可以对其使用解引用运算符并修改其内部值。")],1),s._v(" "),a("p",[s._v("当我们打印出 "),a("code",[s._v("a")]),s._v("、"),a("code",[s._v("b")]),s._v(" 和 "),a("code",[s._v("c")]),s._v(" 时，可以看到他们都拥有修改后的值 15 而不是 5：")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("a after = Cons(RefCell { value: 15 }, Nil)\nb after = Cons(RefCell { value: 6 }, Cons(RefCell { value: 15 }, Nil))\nc after = Cons(RefCell { value: 10 }, Cons(RefCell { value: 15 }, Nil))\n")])])]),a("p",[s._v("这是非常巧妙的！通过使用 "),a("code",[s._v("RefCell<T>")]),s._v("，我们可以拥有一个表面上不可变的 "),a("code",[s._v("List")]),s._v("，不过可以使用 "),a("code",[s._v("RefCell<T>")]),s._v(" 中提供内部可变性的方法来在需要时修改数据。"),a("code",[s._v("RefCell<T>")]),s._v(" 的运行时借用规则检查也确实保护我们免于出现数据竞争——有时为了数据结构的灵活性而付出一些性能是值得的。")]),s._v(" "),a("p",[s._v("标准库中也有其他提供内部可变性的类型，比如 "),a("code",[s._v("Cell<T>")]),s._v("，它类似 "),a("code",[s._v("RefCell<T>")]),s._v(" 但有一点除外：它并非提供内部值的引用，而是把值拷贝进和拷贝出 "),a("code",[s._v("Cell<T>")]),s._v("。还有 "),a("code",[s._v("Mutex<T>")]),s._v("，其提供线程间安全的内部可变性，我们将在第 16 章中讨论其用法。请查看标准库来获取更多细节关于这些不同类型之间的区别。")])])}),[],!1,null,null,null);t.default=e.exports}}]);