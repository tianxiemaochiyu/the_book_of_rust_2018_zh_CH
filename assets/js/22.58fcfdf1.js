(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{369:function(t,r,e){"use strict";e.r(r);var s=e(42),o=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"常见编程概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见编程概念"}},[t._v("#")]),t._v(" 常见编程概念")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch03-00-common-programming-concepts.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch03-00-common-programming-concepts.md"),e("OutboundLink")],1),t._v(" "),e("br"),t._v("\ncommit 1f49356cb21cbc27bc5359bfe655d26757d4b137")])]),t._v(" "),e("p",[t._v("本章介绍一些几乎所有编程语言都有的概念，以及它们在 Rust 中是如何工作的。很多编程语言的核心概念都是共通的，本章中展示的概念都不是 Rust 所特有的，不过我们会在 Rust 上下文中讨论它们，并解释使用这些概念的惯例。")]),t._v(" "),e("p",[t._v("具体来说，我们将会学习变量、基本类型、函数、注释和控制流。每一个 Rust 程序中都会用到这些基础知识，提早学习这些概念会让你在起步时就打下坚实的基础。")]),t._v(" "),e("blockquote",[e("h2",{attrs:{id:"关键字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),e("p",[t._v("Rust 语言有一组保留的 "),e("strong",[t._v("关键字")]),t._v("（"),e("em",[t._v("keywords")]),t._v("），就像大部分语言一样，它们只能由语言本身使用。记住，你不能使用这些关键字作为变量或函数的名称。大部分关键字有特殊的意义，你将在 Rust 程序中使用它们完成各种任务；一些关键字目前没有相应的功能，是为将来可能添加的功能保留的。可以在附录 A 中找到关键字的列表。")])])])}),[],!1,null,null,null);r.default=o.exports}}]);